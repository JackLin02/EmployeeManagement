<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.3.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 配置了context:component-scan之后，这个包下的注解就会生效 -->
	<context:component-scan base-package="com.ssm.service,com.ssm.dao" />

	<!-- 配置整合MyBatis,关联数据库文件 -->
	<!-- 加载jdbc.properties -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 配置数据源-c3p0数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="minPoolSize" value="10"></property>
		<property name="maxPoolSize" value="50"></property>
		<property name="initialPoolSize" value="10"></property>
	</bean>
	<!-- 配置SqlSessionFactory-mybatis操作数据库核心对象的工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 注入mybatis的核心配置文件 -->
		<property name="configLocation" value="classpath:mybatis.cfg.xml"></property>
	</bean>
	<!-- 配置Mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入扫描mapper的包路径 -->
		<property name="basePackage" value="com.ssm.dao"></property>
		<!-- 注入sqlSessionFactoryBeanName -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	<!-- 配置事务-使用jdbc的事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 启用注解驱动 -->
	<context:annotation-config />

	<!-- 开启spring对事务注解支持 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>